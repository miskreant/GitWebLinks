{
    "env": {
        "es6": true,
        "node": true
    },
    "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
        "plugin:jsdoc/recommended",
        "plugin:node/recommended",
        "prettier"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "project": "tsconfig.json",
        "sourceType": "module"
    },
    "plugins": ["@typescript-eslint", "eslint-plugin-jsdoc", "import", "jest"],
    "rules": {
        "@typescript-eslint/no-inferrable-types": "off",
        "@typescript-eslint/array-type": ["warn", { "default": "array" }],
        "@typescript-eslint/consistent-indexed-object-style": ["warn", "record"],
        "@typescript-eslint/consistent-type-assertions": [
            "warn",
            { "assertionStyle": "as", "objectLiteralTypeAssertions": "allow" }
        ],
        "@typescript-eslint/explicit-function-return-type": [
            "warn",
            {
                "allowExpressions": true,
                "allowTypedFunctionExpressions": true,
                "allowHigherOrderFunctions": true,
                "allowDirectConstAssertionInArrowFunctions": true,
                "allowConciseArrowFunctionExpressionsStartingWithVoid": true
            }
        ],
        "@typescript-eslint/explicit-member-accessibility": [
            "warn",
            {
                "accessibility": "explicit",
                "overrides": {
                    "constructors": "no-public"
                }
            }
        ],
        "@typescript-eslint/no-confusing-non-null-assertion": "error",
        "@typescript-eslint/prefer-readonly": "warn",
        "@typescript-eslint/promise-function-async": "warn",
        "@typescript-eslint/restrict-template-expressions": "off",
        "import/no-deprecated": "error",
        "import/no-duplicates": "error",
        "import/newline-after-import": "warn",
        "import/order": [
            "warn",
            {
                "groups": [
                    ["builtin", "external", "internal"],
                    "parent",
                    ["sibling", "index", "object"],
                    "unknown"
                ],
                "newlines-between": "always",
                "alphabetize": { "order": "asc" }
            }
        ],
        "jest/no-focused-tests": "warn",
        "jsdoc/require-description": ["warn", { "checkConstructors": false }],
        "jsdoc/require-returns": ["warn", { "checkGetters": false }],
        "jsdoc/require-returns-check": "off",
        "jsdoc/require-jsdoc": [
            "warn",
            {
                "checkGetters": true,
                "require": {
                    "ArrowFunctionExpression": false,
                    "ClassDeclaration": true,
                    "ClassExpression": true,
                    "FunctionDeclaration": true,
                    "FunctionExpression": true,
                    "MethodDefinition": true
                }
            }
        ],
        "jsdoc/tag-lines": ["warn", "never", { "startLines": 1 }],
        "node/no-sync": "error",
        "node/no-unpublished-import": "off",
        "no-console": "error",
        "prefer-const": "off",
        "sort-imports": ["warn", { "ignoreCase": true, "ignoreDeclarationSort": true }]
    },
    "settings": {
        "jsdoc": {
            "tagNamePreference": {
                "class": "constructor"
            },
            "ignorePrivate": false
        }
    },
    "overrides": [
        {
            "files": ["*.ts"],
            "rules": {
                "jsdoc/require-param-type": "off",
                "jsdoc/require-returns-type": "off",
                "node/no-missing-import": "off",
                "node/no-unsupported-features/es-syntax": "off"
            }
        },
        {
            "files": ["*.test.ts"],
            "rules": {
                "@typescript-eslint/no-unused-expression": "off",
                "jsdoc/require-jsdoc": "off"
            }
        }
    ]
}
